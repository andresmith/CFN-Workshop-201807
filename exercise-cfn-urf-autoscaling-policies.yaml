Description: Example stack with an AutoScaling Group
Parameters:
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
    - SMALL
    - MEDIUM
    - LARGE
    Description: Select Environment Size (S ,M,L)
  EC2SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Select security group to assign to EC2
  EC2Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select subnet(s) to assign to EC2 and CLB
  IamInstanceProfile:
    Type: String
    Description: OPTIONAL - IAM instance profile to attached to the EC2 Instance
  DesiredInstances:
    Type: Number
    Description: Desired nr of instances to be launched by autoscaling (1-5)
    Default: 2
  UpdateWithWaitCondition:
    Type: String
    Description: OPTIONAL - set to 'yes' to simulate stack failure
    AllowedValues: [yes, no]
    Default: no

Mappings:
  RegionMap:
    us-east-1:
      "AMALINUX" : "ami-97785bed" # AMALINUX JAN 2018 
    us-east-2:
      "AMALINUX" : "ami-f63b1193" # AMALINUX JAN 2018
    us-west-1:
      "AMALINUX" : "ami-824c4ee2" # AMALINUX JAN 2018
    us-west-2:
      "AMALINUX" : "ami-f2d3638a" # AMALINUX JAN 2018
    ca-central-1:
      "AMALINUX" : "ami-a954d1cd" # AMALINUX JAN 2018
    eu-west-1:
      "AMALINUX" : "ami-d834aba1" # AMALINUX JAN 2018
    eu-central-1:
      "AMALINUX" : "ami-5652ce39" # AMALINUX JAN 2018
    eu-west-2:
      "AMALINUX" : "ami-403e2524" # AMALINUX JAN 2018
    ap-southeast-1:
      "AMALINUX" : "ami-68097514" # AMALINUX JAN 2018
    ap-southeast-2:
      "AMALINUX" : "ami-942dd1f6" # AMALINUX JAN 2018
    ap-northeast-2:
      "AMALINUX" : "ami-863090e8" # AMALINUX JAN 2018
    ap-northeast-1:
      "AMALINUX" : "ami-ceafcba8" # AMALINUX JAN 2018
    ap-south-1:
      "AMALINUX" : "ami-531a4c3c" # AMALINUX JAN 2018
    sa-east-1:
      "AMALINUX" : "ami-84175ae8" # AMALINUX JAN 2018
  InstanceSize:
    SMALL:
      "EC2" : "t2.micro"
    MEDIUM:
      "EC2" : "t2.small"
    LARGE:
      "EC2" : "t2.medium"

Conditions:
  hasIamInstanceProfile: 
    !Not [!Equals [!Ref IamInstanceProfile, ""]]
  hasWaitCondition:
    !Equals [!Ref UpdateWithWaitCondition, yes ]

Resources:
  myLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !If [hasIamInstanceProfile, !Ref IamInstanceProfile, !Ref "AWS::NoValue"]
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX]
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      SecurityGroups: !Ref EC2SecurityGroups
      UserData:
        "Fn::Base64":
          !Sub | 
            #!/bin/bash
            yum install -y aws-cfn-bootstrap
            yum install httpd -y
            service httpd start
            chkconfig httpd on
            curl http://169.254.169.254/latest/meta-data/public-hostname > /var/www/html/healthcheck.html
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource myAutoScalingGroup --region ${AWS::Region}

  myAutoScalingGroup:
    DependsOn: myLaunchConfig
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      Cooldown: 120
      DesiredCapacity: !Ref DesiredInstances
      HealthCheckGracePeriod: 120
      HealthCheckType: "EC2" # or ELB
      LaunchConfigurationName: !Ref myLaunchConfig
      MaxSize: 5
      MinSize: 1
      VPCZoneIdentifier: !Ref EC2Subnets
    CreationPolicy:
      ResourceSignal:
        Count: !Ref DesiredInstances
        Timeout: PT5M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT5M
        WaitOnResourceSignals: 'true'
  
  myWaitCondition:
    Condition: hasWaitCondition
    Type: "AWS::CloudFormation::WaitCondition"
    DependsOn: myAutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT1M